apply plugin: 'com.android.application'

android {
    applicationVariants.all { variant ->
        variant.outputs.each { output ->
            def lintTask = tasks["lint${variant.name.capitalize()}"]
            output.assemble.dependsOn lintTask
        }
    }
    lintOptions {
        htmlReport true
        htmlOutput file("lint-report.html")
        textReport true
        textOutput 'stdout'
        abortOnError true
        warningsAsErrors false
    }

    compileSdkVersion 28

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    defaultConfig {
        applicationId "com.amos.server"
        minSdkVersion 21
        targetSdkVersion 28
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

     flavorDimensions "device"
     productFlavors {
         mobile {
             minSdkVersion 21
         }
         embedded {
             minSdkVersion 27
         }
     }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation project(path: ':shared')

    implementation 'com.android.support:appcompat-v7:28.0.0'
    implementation 'com.android.support.constraint:constraint-layout:1.1.3'
    implementation 'com.android.support:design:28.0.0'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:runner:1.0.2'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'
    implementation 'org.webrtc:google-webrtc:1.0.22672'
    implementation "org.java-websocket:Java-WebSocket:1.3.9"

    embeddedCompileOnly 'com.google.android.things:androidthings:+'

}

task prePreBuild {
    exec {
        workingDir '..'
        commandLine('bash', 'update-build-info.sh', 'server')
    }
}
preBuild.dependsOn prePreBuild
